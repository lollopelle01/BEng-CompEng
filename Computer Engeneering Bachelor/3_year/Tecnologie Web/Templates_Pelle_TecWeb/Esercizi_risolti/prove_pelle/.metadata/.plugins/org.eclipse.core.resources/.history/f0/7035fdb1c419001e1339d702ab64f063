package servlets;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import beans.*;

public class LoginServlet extends HttpServlet{

	private static final long serialVersionUID = 1L;
	Map<String, UserInfo> users;
	Map<String, List<UserInfo>> group_users;
	
	@SuppressWarnings("unchecked")
	@Override
	public void init() throws ServletException {
		//mappa per raccogliere le informazioni di ogni utente che sta eseguendo le operazioni
		Map<String, UserInfo> users = new HashMap<>();
		
		//se la mappa non è nulla la salvo nella mia variabile
		if(getServletContext().getAttribute("database") != null) {
			users = (Map<String, UserInfo>) getServletContext().getAttribute("database");
		} else {
			getServletContext().setAttribute("database", users);
		}
		
		// -----------------------------------------------------------------------------------------
		
		//mappa per raccogliere le informazioni di ogni utente e gruppo
		Map<String, List<UserInfo>> group_users = new HashMap<>();
		
		//se la mappa non è nulla la salvo nella mia variabile
		if(getServletContext().getAttribute("group_users") != null) {
			group_users = (Map<String, List<UserInfo>>) getServletContext().getAttribute("group_users");
		} else {
			// inseriamo dei gruppi
			group_users.put("group0", new ArrayList<UserInfo>());
			group_users.put("group1", new ArrayList<UserInfo>());
			group_users.put("group2", new ArrayList<UserInfo>());
			
			// salviamo la mappa
			getServletContext().setAttribute("group_users", group_users);
		}
	}

	@SuppressWarnings("unchecked")
	@Override
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		//dai parametri della request ottengo username e password
		String username = request.getParameter("username");
		String password = request.getParameter("password");
		String group = request.getParameter("group");
		
		//questi parametri vanno salvati nella sessione corrente
		HttpSession session = request.getSession();
		session.setAttribute("username", username);
		session.setAttribute("password", password);
		session.setAttribute("group", group);
		
		//dal contesto della servlet poi ottengo il database
		Map<String, UserInfo> users = (Map<String, UserInfo>) getServletContext().getAttribute("database");
		
		if(username.compareTo("admin")==0 && password.compareTo("admin")==0) {
			//se il login corrisponde a quello dell'admin va reindizzato alla sua personale pagina
			session.setAttribute("logged", true);
			session.setAttribute("registrato", true);
			response.sendRedirect("./admin.jsp");
		} 
		if(users.containsKey(username) && users.get(username).getPassword().compareTo(password)==0 && group_users.keySet().contains(group)) {
			//se il login corrisponde a quello di un utente e il gruppo esiste va reindizzato alla home degli utenti
			
			// Aggiungiamo utente al gruppo
			group_users.get(group).add(users.get(username));
			group_users.put(group, group_users.get(group));
			
			// salviamo la mappa
			getServletContext().setAttribute("group_users", group_users);
			
			session.setAttribute("logged", true);
			session.setAttribute("registrato", true);
			response.sendRedirect("./home.jsp");
		}
		else {
			//altrimenti non è registrato
			session.setAttribute("registrato", false);
			response.sendRedirect("./login.jsp");
		}
	}
}
