'use strict';

class App extends React.Component {
    constructor() {
        super();
        this.state = {
            h : 0,
            l : 0,
            grid : [],
            tentativi : 0,
            vittorie : 0,
            sconfitte : 0
        }

        this.generate = this.generate.bind(this);
        this.play = this.play.bind(this);
    }

    generate({h, l, result}) {
        let win = this.state.vittorie;
        let lost = this.state.sconfitte;
        if(result != undefined) {
            if(result == "win") {
                win++;
            } else {
                lost++;
            }
        }

        // Creo griglia vuota
        let matrix = new Array(h);
        for(let i = 0; i < h; i++) {
            matrix[i] = new Array(l);
        }
        
        // Inserisco mine
        for(let i = 0; i < h; i++) {
        	let mine_riga=0;
        	
        	while(mine_riga < 2){ // FinchÃ¨ non le metto continuo --> potrebbe mettermi solo degli 0
        		console.log("Sono bloccato nel loop");
        		
        		// Due mine casuali
                for(let j = 0; j < l; j++) {
                    if(mine_riga < 2) {
                        matrix[i][j] = Math.floor(Math.random()); // 1 la mette		 0 non la mette
                        if(matrix[i][j] == 1){
                        	mine_riga++;
                        }
                    } else {
                        matrix[i][j] = 0;
                    }
                }
        	}
        	
        	
        }
        
        console.log("Nuova matrice generata");
        console.log(matrix)
        $(".cell").each(function() {
        	
        	// Inseriamo il numero per ogni click
        	 $(e.target).text(this.state.tentativi);
        })
        this.setState({
	    	h : h,
	        l : l,
            grid : matrix,
            tentativi : 0,
            vittorie : win,
            sconfitte : lost
        })
    }

    play(e) {
        let flower = e.target.id;

        if(flower == 1) {
            $(e.target).css({
                "background-color" : "red"
            });
            if(this.state.tentativi == 3){
            	alert("Game Over!");
                this.generate({mines : this.state.mines, size : this.state.size, result : "lose"});
            }
        } else {
            $(e.target).css({
                "background-color" : "blue"
            });

            if(this.state.tentativi == 5) {
                alert("You win!");
                this.generate({mines : this.state.mines, size : this.state.size, result : "win"});
            } else {
                this.setState({
                    tentativi : this.state.tentativi + 1
                });
            }
        }
    }

    render() {
        return (
            <div>
                <Configurazione generate={this.generate}/>
                <Gioco grid={this.state.grid} play={this.play}/>
                <Conteggio vittorie={this.state.vittorie} sconfitte={this.state.sconfitte}/>
            </div>
        );
    }
}

