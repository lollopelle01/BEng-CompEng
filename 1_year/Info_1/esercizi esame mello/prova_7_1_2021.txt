Es.1
#include <stdio.h>
#include"list.h"
list nuovaLista(int start, int end){
	if(start>end)
		return emptylist();
	else
		return cons(start, nuovaLista(start+1, end));
}

void quantiPariDispari(list P, int * pari, int * dispari){
	*pari=0;
	*dispari=0;
	while(!empty(P)){
		if(head(P)%2==0){
			(*pari)++;
			P=tail(P);
		}
		if(head(P)%2!=0){
			(*dispari)++;
			P=tail(P);
		}
	}
	return;
}

int main(){
	int p, d;
	list l1,
	l1=nuovaLista(3, 6);
	quantiPariDispari(l1, &p, &d);
	printf("%d pari\n%d dispari", p, d);
	return 0;
	
}

Es.2
14=00001110
39=00100111
-39=11011001
14-39=11100111 -> -(00011001)->-25

Es.3
il main definisce una stringa *string1 e *str="Ecco", poi assegna ad string1 il risultato di subStr(str, 'c', 'B').
la funzione subStr copia str in temp e usa un ciclo wile e analizza carattere per carattere la stringa temp e fino a quando il carattere in questione non sarà quello di fine stringa incrementa i(inizializzato a 0) e la variabile globale n(inizializzata a 0). Dopo 4 iterazioni i ed n valgono 4. Poi con una malloc viene allocata nella stringa res la memoria per 1 carattere. Poi con un altro ciclo while in cui viene confrontata str carattere per carattere e il ciclo partirà se non sarà il carattere di fine stringa.
In quel caso res diventerà B se il carattere sarà c oppure res diventerà *. 

l'output prodotto é:
*BB*
4
0


